-- 방문 경로 테이블
CREATE TABLE referral_sources (
    id SERIAL PRIMARY KEY,
    source_name VARCHAR(100) NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- 약관 버전 테이블
CREATE TABLE terms_versions (
    id SERIAL PRIMARY KEY,
    terms_type VARCHAR(50) NOT NULL, -- 'privacy' 또는 'terms'
    content TEXT NOT NULL,
    version VARCHAR(20) NOT NULL,
    effective_date TIMESTAMP WITH TIME ZONE NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- 사용자 테이블
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    email VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL
    username VARCHAR(100) NOT NULL,
    phone_number VARCHAR(20) NOT NULL,
    company_name VARCHAR(200),
    position VARCHAR(100),
    referral_source_id INTEGER REFERENCES referral_sources(id),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    last_login TIMESTAMP WITH TIME ZONE
);

-- 약관 동의 이력 테이블
CREATE TABLE user_agreements (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    terms_version_id INTEGER REFERENCES terms_versions(id),
    agreed_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    ip_address VARCHAR(45),
    UNIQUE(user_id, terms_version_id)
);

-- 세션 관리 테이블
CREATE TABLE sessions (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    token VARCHAR(255) NOT NULL,
    expires_at TIMESTAMP WITH TIME ZONE NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(token)
);

-- 카테고리 테이블
CREATE TABLE categories (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    parent_id INTEGER REFERENCES categories(id), -- 상위 카테고리 (계층 구조 지원)
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- 상품 테이블에 category_id 추가
CREATE TABLE products (
    id SERIAL PRIMARY KEY,
    category_id INTEGER REFERENCES categories(id),
    name VARCHAR(200) NOT NULL,
    description TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- 상품 요금제 테이블
CREATE TABLE product_plans (
    id SERIAL PRIMARY KEY,
    product_id INTEGER REFERENCES products(id) ON DELETE CASCADE,
    name VARCHAR(100) NOT NULL,
    price INTEGER NOT NULL,
    billing_type VARCHAR(20) NOT NULL, -- 'subscription' 또는 'one_time'
    billing_cycle INTEGER, -- subscription인 경우 청구 주기(월 단위)
    features JSONB, -- 요금제에 포함된 기능들
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- 결제 내역 테이블
CREATE TABLE payments (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE SET NULL,
    product_plan_id INTEGER REFERENCES product_plans(id),
    amount INTEGER NOT NULL,
    payment_method VARCHAR(50) NOT NULL, -- 'kakaopay', 'credit_card'
    payment_status VARCHAR(20) NOT NULL, -- 'pending', 'completed', 'failed', 'cancelled'
    payment_id VARCHAR(100) UNIQUE NOT NULL, -- 결제 고유 번호
    payment_date TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    coupon_id INTEGER REFERENCES coupons(id),
    discount_amount INTEGER DEFAULT 0,
    original_amount INTEGER NOT NULL,
    order_id INTEGER REFERENCES orders(id)
);

-- 구독 정보 테이블
CREATE TABLE subscriptions (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    product_plan_id INTEGER REFERENCES product_plans(id),
    status VARCHAR(20) NOT NULL, -- 'active', 'cancelled', 'expired'
    start_date TIMESTAMP WITH TIME ZONE NOT NULL,
    end_date TIMESTAMP WITH TIME ZONE,
    next_billing_date TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- 인덱스 생성
CREATE INDEX idx_users_email ON users(email);
CREATE INDEX idx_users_phone ON users(phone_number);
CREATE INDEX idx_users_company ON users(company_name);
CREATE INDEX idx_user_agreements_user_id ON user_agreements(user_id);
CREATE INDEX idx_sessions_token ON sessions(token);
CREATE INDEX idx_sessions_user_id ON sessions(user_id);
CREATE INDEX idx_product_plans_product_id ON product_plans(product_id);
CREATE INDEX idx_payments_user_id ON payments(user_id);
CREATE INDEX idx_payments_product_plan_id ON payments(product_plan_id);
CREATE INDEX idx_subscriptions_user_id ON subscriptions(user_id);
CREATE INDEX idx_subscriptions_product_plan_id ON subscriptions(product_plan_id);
-- 카테고리 인덱스 추가
CREATE INDEX idx_categories_parent_id ON categories(parent_id);
CREATE INDEX idx_products_category_id ON products(category_id);
CREATE INDEX idx_payments_order_id ON payments(order_id);


-- updated_at 자동 갱신을 위한 트리거
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_users_updated_at
    BEFORE UPDATE ON users
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_products_updated_at
    BEFORE UPDATE ON products
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_product_plans_updated_at
    BEFORE UPDATE ON product_plans
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_subscriptions_updated_at
    BEFORE UPDATE ON subscriptions
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- 카테고리 updated_at 트리거 추가
CREATE TRIGGER update_categories_updated_at
    BEFORE UPDATE ON categories
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();


-- 기본 방문 경로 데이터 입력
INSERT INTO referral_sources (source_name) VALUES 
    ('포털사이트 검색'),
    ('SNS 광고'),
    ('그로우썸 디스코드'),
    ('그로우썸 유투브'),
    ('제휴사'),
    ('온/오프라인 행사'),
    ('오픈채팅방'),
    ('기타'),
    ('지인 소개');

-- 기본 약관 버전 입력
INSERT INTO terms_versions (terms_type, content, version, effective_date) VALUES
    ('terms', '서비스 이용약관 내용...', '1.0', CURRENT_TIMESTAMP),
    ('privacy', '개인정보처리방침 내용...', '1.0', CURRENT_TIMESTAMP);

-- 쿠폰 테이블
CREATE TABLE coupons (
    id SERIAL PRIMARY KEY,
    code VARCHAR(50) UNIQUE NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    discount_type VARCHAR(20) NOT NULL, -- 'percentage' 또는 'fixed_amount'
    discount_value INTEGER NOT NULL, -- percentage면 1-100, fixed_amount면 실제 금액
    min_purchase_amount INTEGER, -- 최소 구매 금액
    max_discount_amount INTEGER, -- 최대 할인 금액 (percentage 타입일 때 사용)
    start_date TIMESTAMP WITH TIME ZONE NOT NULL,
    end_date TIMESTAMP WITH TIME ZONE,
    usage_limit INTEGER, -- 전체 사용 제한 횟수
    user_usage_limit INTEGER DEFAULT 1, -- 사용자당 사용 제한 횟수
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- 쿠폰 적용 가능 상품 테이블
CREATE TABLE coupon_products (
    id SERIAL PRIMARY KEY,
    coupon_id INTEGER REFERENCES coupons(id) ON DELETE CASCADE,
    product_id INTEGER REFERENCES products(id) ON DELETE CASCADE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- 사용된 쿠폰 테이블
CREATE TABLE coupon_usages (
    id SERIAL PRIMARY KEY,
    coupon_id INTEGER REFERENCES coupons(id) ON DELETE SET NULL,
    user_id INTEGER REFERENCES users(id) ON DELETE SET NULL,
    payment_id INTEGER REFERENCES payments(id) ON DELETE SET NULL,
    discount_amount INTEGER NOT NULL, -- 실제 적용된 할인 금액
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- 인덱스 추가
CREATE INDEX idx_coupons_code ON coupons(code);
CREATE INDEX idx_coupon_products_coupon_id ON coupon_products(coupon_id);
CREATE INDEX idx_coupon_products_product_id ON coupon_products(product_id);
CREATE INDEX idx_coupon_usages_coupon_id ON coupon_usages(coupon_id);
CREATE INDEX idx_coupon_usages_user_id ON coupon_usages(user_id);
CREATE INDEX idx_coupon_usages_payment_id ON coupon_usages(payment_id);
CREATE INDEX idx_payments_coupon_id ON payments(coupon_id);

-- updated_at 트리거 추가
CREATE TRIGGER update_coupons_updated_at
    BEFORE UPDATE ON coupons
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- 주문 테이블
CREATE TABLE orders (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE SET NULL,
    order_status VARCHAR(20) NOT NULL, -- 'pending', 'completed', 'cancelled', 'failed'
    total_amount INTEGER NOT NULL,
    discount_amount INTEGER DEFAULT 0,
    final_amount INTEGER NOT NULL,
    order_date TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- 주문 상품 상세 테이블
CREATE TABLE order_items (
    id SERIAL PRIMARY KEY,
    order_id INTEGER REFERENCES orders(id) ON DELETE CASCADE,
    product_plan_id INTEGER REFERENCES product_plans(id),
    quantity INTEGER NOT NULL DEFAULT 1,
    unit_price INTEGER NOT NULL,
    subtotal INTEGER NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- 사용자 이용권 테이블
CREATE TABLE user_tickets (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    product_plan_id INTEGER REFERENCES product_plans(id),
    order_id INTEGER REFERENCES orders(id),
    status VARCHAR(20) NOT NULL, -- 'active', 'expired', 'cancelled'
    start_date TIMESTAMP WITH TIME ZONE NOT NULL,
    end_date TIMESTAMP WITH TIME ZONE,
    remaining_uses INTEGER, -- NULL인 경우 무제한
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- 이용권 사용 기록 테이블
CREATE TABLE ticket_usage_logs (
    id SERIAL PRIMARY KEY,
    user_ticket_id INTEGER REFERENCES user_tickets(id) ON DELETE CASCADE,
    used_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    description TEXT
);

-- 인덱스 추가
CREATE INDEX idx_orders_user_id ON orders(user_id);
CREATE INDEX idx_order_items_order_id ON order_items(order_id);
CREATE INDEX idx_user_tickets_user_id ON user_tickets(user_id);
CREATE INDEX idx_user_tickets_order_id ON user_tickets(order_id);
CREATE INDEX idx_ticket_usage_logs_user_ticket_id ON ticket_usage_logs(user_ticket_id);

-- updated_at 트리거 추가
CREATE TRIGGER update_orders_updated_at
    BEFORE UPDATE ON orders
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_user_tickets_updated_at
    BEFORE UPDATE ON user_tickets
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- 토이 프로젝트 테이블
CREATE TABLE toy_projects (
    id SERIAL PRIMARY KEY,
    title VARCHAR(200) NOT NULL,
    description TEXT NOT NULL,
   	url VARCHAR(200) NOT NULL,
    is_active BOOLEAN DEFAULT true,
    tags VARCHAR(50)[] NOT NULL DEFAULT '{}', -- 태그 배열
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);